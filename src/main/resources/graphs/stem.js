// Generated by CoffeeScript 1.6.1
/** This function draws the stem and leave plot. */
function drawStemAndLeave(name, inputData) {
	
	$("#title").text("Stem and Leave Plot: " + name);
	
	inputData = $.parseJSON(inputData);
	inputData.forEach( function(x) {
		for (var i = 0; i < x.length; i++) {
			x[i] = parseFloat(x[i].x);
		}
		
		d3plot(x);
	});
}

function d3plot(data) {
  var div, plot, stem_and_leaf, stems_and_leaves, text, update;
 
  stem_and_leaf = function(value, base) {
    var leaf, sign, stem;
    sign = value < 0 ? "-" : "";
    value = Math.abs(Math.round(value));
    stem = sign + Math.floor(value / base);
    leaf = value % base;
    return [stem, leaf];
  };
 
  stems_and_leaves = function(data, base) {
    var end, leaf, leaves, max, min, start, stem, stemdata, stems, value, _i, _j, _len, _ref;
    if (base == null) {
      base = 10;
    }
    data.sort(function(a, b) {
      return a - b;
    });
    min = data[0];
    max = data[data.length - 1];
    start = +stem_and_leaf(min, base)[0];
    end = +stem_and_leaf(max, base)[0];
    stems = {};
    for (stem = _i = start; start <= end ? _i <= end : _i >= end; stem = start <= end ? ++_i : --_i) {
      if (stem === 0 && min < 0) {
        stems["-0"] = [];
      }
      stems["" + stem] = [];
    }
    for (_j = 0, _len = data.length; _j < _len; _j++) {
      value = data[_j];
      _ref = stem_and_leaf(value, base), stem = _ref[0], leaf = _ref[1];
      stems[stem].push({
        'leaf': leaf,
        'value': value
      });
    }
    stemdata = [];
    for (stem in stems) {
      leaves = stems[stem];
      stemdata.push({
        'stem': stem,
        'leaves': leaves
      });
    }
    return stemdata;
  };
 
  update = function(data) {
    var stem_enter, stemdata, stems, x;
    data = (function() {
      var _i, _len, _results;
      _results = [];
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        x = data[_i];
        if (!isNaN(x)) {
          _results.push(x);
        }
      }
      return _results;
    })();
    stemdata = stems_and_leaves(data);
    stems = plot.selectAll("li.stem").data(stemdata, function(d) {
      return d.stem + ((function() {
        var _i, _len, _ref, _results;
        _ref = d.leaves;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          x = _ref[_i];
          _results.push(x.value);
        }
        return _results;
      })()).join(',');
    });
    stem_enter = stems.enter().append("li").attr("class", "stem");
    stem_enter.append("div");
    stem_enter.append("ul").attr("class", "leaves").selectAll("li.leaf").data(function(d) {
      return d.leaves;
    }).enter().append("li").attr("class", "leaf").attr('data-value', function(d) {
      return d.value;
    }).text(function(d) {
      return d.leaf;
    });
    stems.sort(function(a, b) {
      var y;
      x = a.stem;
      y = b.stem;
      if ((x === "-0") && (y === "0")) {
        return -1;
      }
      if ((y === "-0") && (x === "0")) {
        return 1;
      }
      if (+x < +y) {
        return -1;
      } else {
        return 1;
      }
    });
    stems.select("div").text(function(d) {
      return d.stem;
    });
    return stems.exit().remove();
    d3.select(self.frameElement).style("height", div.style("height"));
  };
 
  div = d3.select("div");
 
  plot = div.append("ul").attr("class", "stems");
 
  update(data);
 }